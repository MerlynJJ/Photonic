=head1 NAME

Photonic::ExtraUtils - Glue for utility Fortran routines

=head1 SYNOPSIS

       use Photonic::ExtraUtils;

       dgtsl($c, $d, $e, $b, $info);
       cgtsl($c, $d, $e, $b, $info);
      

=head1 DESCRIPTION

Call some fortran routines from perl code.       


=cut

=head1 FUNCTIONS




=cut

=head2 dgtsl

=for ref

Runs the LINPACK fortran routine DGTSL to solve a general tridiagonal
system of equations in double precission.

=for usage

       dgtsl($c, $d, $e, $b, $info);

where $c(1..$n-1) is the subdiagonal, $d(0..$n-1) the diagonal and
$e(0..$n-2) the supradiagonal of an $nX$n tridiagonal
matrix. $b(0..$n-1) is the right hand side vector. $b is replaced by
the solution. $info returns 0 for success or k if the k-1-th element
of the diagonal became zero.


=head2 cgtsl

=for ref

Runs the LINPACK fortran routine CGTSL to solve a general complex tridiagonal
system of equations.

=for usage

       dgtsl($c, $d, $e, $b, $info);

where $c(2,1..$n-1) is the subdiagonal, $d(2,0..$n-1) the diagonal and
$e(2,0..$n-2) the supradiagonal of an $nX$n tridiagonal complex
matrix. $b(2,0..$n-1) is the right hand side vector. $b is replaced by
the solution. $info returns 0 for success or k if the k-1-th element
of the diagonal became zero. Either 2Xn pdl's are used to represent
complex numbers, as in PDL::Complex.

=begin Pod::Coverage

=head2 set_boundscheck

=head2 set_debugging

=end Pod::Coverage




=cut

=head2 dgtsl

=for sig

  Signature: (c(n); d(n); e(n); [o] b(n); int [o] info())


=for ref

info not available


=for bad

dgtsl does not process bad values.
It will set the bad-value flag of all output piddles if the flag is set for any of the input piddles.



=cut

=head2 cgtsl

=for sig

  Signature: (c(2,n); d(2,n); e(2,n); [o] b(2,n); int [o] info())


=for ref

info not available


=for bad

cgtsl does not process bad values.
It will set the bad-value flag of all output piddles if the flag is set for any of the input piddles.



=cut

